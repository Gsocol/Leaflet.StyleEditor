{"version":3,"sources":["webpack://leafletstyleeditor/webpack/bootstrap","webpack://leafletstyleeditor/external {\"commonjs\":\"leaflet\",\"amd\":\"leaflet\",\"root\":\"L\"}","webpack://leafletstyleeditor/./lib/formElements/FormElement.js","webpack://leafletstyleeditor/./lib/form/index.js","webpack://leafletstyleeditor/./lib/form/Form.js","webpack://leafletstyleeditor/./lib/Util.js","webpack://leafletstyleeditor/./lib/formElements/ColorElement.js","webpack://leafletstyleeditor/./lib/formElements/DashElement.js","webpack://leafletstyleeditor/./lib/formElements/OpacityElement.js","webpack://leafletstyleeditor/./lib/formElements/PopupContentElement.js","webpack://leafletstyleeditor/./lib/formElements/WeightElement.js","webpack://leafletstyleeditor/./lib/Leaflet.StyleEditor.js","webpack://leafletstyleeditor/./lib/form/GeometryForm.js","webpack://leafletstyleeditor/./lib/form/MarkerForm.js","webpack://leafletstyleeditor/./lib/formElements/index.js","webpack://leafletstyleeditor/./lib/formElements/IconElement.js","webpack://leafletstyleeditor/./lib/formElements/SizeElement.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","undefined","__importDefault","this","mod","leaflet_1","require","Util_1","FormElement","styleEditor","util","default","getInstance","parentUiElement","options","uiElement","DomUtil","createTitle","createContent","innerHTML","title","style","showForm","showElement","hideElement","currentElement","getCurrentElement","layers","Layer","LayerGroup","getLayers","length","layer","Marker","markerType","setStyle","styleOption","newStyle","fireChangeEvent","parentForm","Form_1","Form","GeometryForm_1","GeometryForm","MarkerForm_1","MarkerForm","FormOptions","formElements","getFormElements","styleFormKeys","keys","formElement","getFormElementClass","initializedElements","push","hideFormElements","hideForm","hide","preShow","showFormElements","showFormElement","lostFocus","showFormElementForStyleOption","show","formOptionKey","forms","indexOf","getFormElementStandardClass","formElementInstance","e","styleFormElement","err","Util","instance","eventName","element","map","fireEvent","styleEditorEventPrefix","addClass","rgb","noHash","defaultColor","replace","rgbArray","substring","split","withoutHash","_componentToHex","parseInt","target","fill","option","removeClass","color","hex","toString","rgbToHex","markers","controlMarkers","Array","isArray","includes","filter","getMarkersForColor","defMarkers","defaultMarker","defaultMarkerIcon","FormElement_1","form_1","ColorElement","colorPickerDiv","_getColorRamp","forEach","_setSelectCallback","colorRamp","elem","backgroundColor","DomEvent","addListener","_selectColor","stopPropagation","setNewMarker","DashElement","stroke","backgroundPosition","OpacityFormElement","label","slider","type","max","String","min","step","_setStyle","getStyle","innerText","PopupContentElement","textArea","descTextAreaField","selectedElement","popupContent","inputText","marker","getPopup","bindPopup","popup1","setContent","WeigthElement","weight","StyleEditor","_editLayers","_layerGroups","markerForm","geometryForm","include","Polygon","Polyline","Rectangle","__importStar","result","k","ColorElement_1","DashElement_1","OpacityElement_1","PopupContentElement_1","WeightElement_1","GeometryFormOptions","arguments","fillCurrentElement","formElements_1","IconElement","SizeElement","IconElement_1","OpacityElement","SizeElement_1","WeightElement","_selectOptionWrapperClasses","_selectOptionClasses","selectBox","selectBoxImage","_createSelectInputImage","_toggleSelectInput","iconOptions","getIconOptions","_styleSelectInputImage","icon","iconColor","_createColorSelect","_hideSelectOptions","wrapper","image","getAttribute","createSelectHTML","setAttribute","selectOptions","selectOptionWrapper","selectOption","selectImage","nodeName","parentElement","className","children","_selectMarker","currentColorElement","_getCurrentColorElement","hasClass","_getValue","select","styleEditorOptions","size","small","medium","large"],"mappings":"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","file":"javascript/Leaflet.StyleEditor.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = undefined;","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst Util_1 = __importDefault(require(\"../Util\"));\n/** FormElements are part of a Form for a specific styling option (i.e. color) */\nclass FormElement {\n    constructor(styleEditor) {\n        this.util = Util_1.default.getInstance();\n        this.styleEditor = styleEditor;\n    }\n    /* TODO\n    // if no title is given use styling option\n    if(!this.options.title && !!this.options.styleOption) {\n    this.options.title = this.options.styleOption.charAt(0).toUpperCase() + this.options.styleOption.slice(1)\n  }*/\n    /** create uiElement and content */\n    create(parentUiElement) {\n        this.options.uiElement =\n            leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-uiElement', parentUiElement);\n        this.createTitle();\n        this.createContent();\n    }\n    /** create title */\n    createTitle() {\n        let title = leaflet_1.default.DomUtil.create('label', 'leaflet-styleeditor-label', this.options.uiElement);\n        title.innerHTML = this.options.title + ':';\n    }\n    /** create content (where the actual modification takes place) */\n    createContent() {\n    }\n    /** style the FormElement and show it */\n    show() {\n        this.style();\n        this.showForm();\n    }\n    /** show the FormElement */\n    showForm() {\n        this.util.showElement(this.options.uiElement);\n    }\n    /** hide the FormElement */\n    hide() {\n        this.util.hideElement(this.options.uiElement);\n    }\n    /** style the FormElement */\n    style() {\n    }\n    /** what to do when lost focus */\n    lostFocus() {\n    }\n    /** set style - used when the FormElement wants to change the styling option */\n    setStyle(value) {\n        let currentElement = this.util.getCurrentElement();\n        // check whether a layer is part of a layerGroup\n        let layers = leaflet_1.default.Layer[currentElement];\n        if (currentElement instanceof leaflet_1.default.LayerGroup) {\n            layers = currentElement.getLayers;\n        }\n        // update layer (or all layers of a layerGroup)\n        for (let i = 0; i < layers.length; i++) {\n            let layer = layers[i];\n            if (layer instanceof leaflet_1.default.Marker) {\n                this.styleEditor.options.markerType.setStyle(this.options.styleOption, value);\n            }\n            else {\n                let newStyle = {};\n                newStyle[this.options.styleOption] = value;\n                layer.setStyle(newStyle);\n                layer.options[this.options.styleOption] = value;\n            }\n            // fire event for changed layer\n            this.util.fireChangeEvent(layer);\n        }\n        // notify form styling value has changed\n        this.options.parentForm.style();\n    }\n}\nexports.default = FormElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Form_1 = __importDefault(require(\"./Form\"));\nexports.Form = Form_1.default;\nconst GeometryForm_1 = __importDefault(require(\"./GeometryForm\"));\nexports.GeometryForm = GeometryForm_1.default;\nconst MarkerForm_1 = __importDefault(require(\"./MarkerForm\"));\nexports.MarkerForm = MarkerForm_1.default;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Util_1 = __importDefault(require(\"../Util\"));\nclass FormOptions {\n}\nexports.FormOptions = FormOptions;\n/**\n * Forms consist of FormElements and are shown in the StyleForm\n * There exists a MarkerForm to modify Markers and a GeometryForm to modify Geometries (i.e. rectangles...)\n * Style options based on:\n *     - path: https://leafletjs.com/reference.html#path-options\n *     - icon: https://leafletjs.com/reference.html#icon\n */\nclass Form {\n    constructor(styleEditor) {\n        this.util = Util_1.default.getInstance();\n        this.styleEditor = styleEditor;\n    }\n    /** create every FormElement in the parentUiElement */\n    create(parentUiElement) {\n        this.options.parentUiElement = parentUiElement;\n        let formElements = this.getFormElements();\n        let styleFormKeys = Object.keys(formElements);\n        for (let i = 0; i < styleFormKeys.length; i++) {\n            let formElement = this.getFormElementClass(styleFormKeys[i]);\n            if (formElement !== undefined) {\n                formElement.create(parentUiElement);\n                this.options.initializedElements.push(formElement);\n            }\n        }\n    }\n    /** hide the Form including its FormElements */\n    hide() {\n        this.hideFormElements();\n        this.hideForm();\n    }\n    /** hide the FormElements */\n    hideFormElements() {\n        for (let i = 0; i < this.options.initializedElements.length; i++) {\n            this.options.initializedElements[i].hide();\n        }\n    }\n    /** hide the Form */\n    hideForm() {\n        this.util.hideElement(this.options.parentUiElement);\n    }\n    /** make FormElements and Form visible */\n    show() {\n        this.preShow();\n        this.showFormElements();\n        this.showForm();\n        this.style();\n    }\n    /** hook which is called at the beginning of the show function */\n    preShow() {\n    }\n    /** make every FormElement visible */\n    showFormElements() {\n        for (let i = 0; i < this.options.initializedElements.length; i++) {\n            this.showFormElement(this.options.initializedElements[i]);\n        }\n    }\n    /** make the Form visible */\n    showForm() {\n        this.util.showElement(this.options.parentUiElement);\n    }\n    /** inform FormElements the selected style has changed, so they can adapt */\n    style() {\n        for (let i = 0; i < this.options.initializedElements.length; i++) {\n            this.options.initializedElements[i].style();\n        }\n    }\n    /** inform Form it lost it's focus */\n    lostFocus() {\n        for (let i = 0; i < this.options.initializedElements.length; i++) {\n            this.options.initializedElements[i].lostFocus();\n        }\n    }\n    /**\n     * @returns a Boolean indicating if the @param formElement should be shown\n     */\n    showFormElement(formElement) {\n        // check wether element should be shown or not\n        if (this.showFormElementForStyleOption(formElement.options.styleOption)) {\n            formElement.show();\n        }\n        else {\n            formElement.hide();\n        }\n    }\n    /**\n     * get the currently used formElements\n     * either standard or the ones provided while instanciation\n     */\n    getFormElements() {\n        let formElements;\n        if (this.options.formOptionKey in this.styleEditor.options.forms) {\n            formElements = this.styleEditor.options.forms[this.options.formOptionKey];\n        }\n        else {\n            formElements = this.options.formElements;\n        }\n        return formElements;\n    }\n    /**\n     * get the Class of the Formelement to instanciate\n     * @param {*} styleOption, the styleOption to get the FormElement for\n     */\n    getFormElementClass(styleOption) {\n        let formElements = this.getFormElements();\n        let formElementKeys = Object.keys(formElements);\n        if (formElementKeys.indexOf(styleOption) >= 0) {\n            let FormElement = formElements[styleOption];\n            if (FormElement) {\n                // may be a dictionary\n                if (typeof FormElement === 'boolean') {\n                    return this.getFormElementStandardClass(styleOption);\n                }\n                if ('formElement' in FormElement && 'boolean' in FormElement) {\n                    FormElement = FormElement['formElement'];\n                }\n                // try to instantiate FormElementOption and return StandardClass if it does not work\n                try {\n                    let formElementInstance = new FormElement({\n                        styleOption: styleOption,\n                        parentForm: this\n                    });\n                    if (formElementInstance instanceof FormElement) {\n                        return formElementInstance;\n                    }\n                }\n                catch (e) {\n                    // creating instance failed fallback to StandardClass\n                }\n            }\n            // if nothing works return it\n            return this.getFormElementStandardClass(styleOption);\n        }\n    }\n    /**\n     * check whether a FormElement should be shown\n     * @param {*} styleOption, the styleOption to check\n     */\n    showFormElementForStyleOption(styleOption) {\n        let formElements = this.getFormElements();\n        if (styleOption in formElements) {\n            let styleFormElement = formElements[styleOption];\n            // maybe a function is given to declare when to show the FormElement\n            if (typeof styleFormElement === 'function') {\n                try {\n                    return styleFormElement(this.util.getCurrentElement());\n                }\n                catch (err) {\n                    // the given function presumably is a constructor -> always show it\n                    return true;\n                }\n            }\n            // maybe a boolean is given to indicate whether to show it\n            if (typeof styleFormElement === 'boolean') {\n                return styleFormElement;\n            }\n            // check for dictionary\n            if ('boolean' in styleFormElement) {\n                // in a dictionary boolean may be a function or boolean\n                if (typeof styleFormElement['boolean'] === 'function') {\n                    return styleFormElement['boolean'](this.util.getCurrentElement());\n                }\n                return styleFormElement['boolean'];\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * get Leaflet.StyleEditor standard FormElement class for given styleOption\n     * @param {*} styleOption, the styleOption to get the standard class for\n     */\n    getFormElementStandardClass(styleOption) {\n        return new this.options.formElements[styleOption]({ styleOption: styleOption, parentForm: this });\n    }\n}\nexports.default = Form;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\n/**\n * Helper functions used throuhgout the project\n */\nclass Util {\n    constructor(styleEditor) {\n        this.styleEditor = styleEditor;\n    }\n    static createInstance(styleEditor) {\n        Util.instance = new Util(styleEditor);\n    }\n    static getInstance() {\n        return Util.instance;\n    }\n    // TODO element type\n    fireEvent(eventName, element) {\n        this.styleEditor.map.fireEvent(this.styleEditor.options.styleEditorEventPrefix + eventName, element);\n    }\n    // TODO element type\n    /** fire an event if Leaflet.StyleEditor changed something */\n    fireChangeEvent(element) {\n        this.fireEvent('changed', element);\n    }\n    /** hide the given element */\n    hideElement(element) {\n        if (element) {\n            leaflet_1.default.DomUtil.addClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** convert rgb to hex of a color\n     * @param {string} rgb - rgb representation of the color\n     * @param {boolean} noHash - define if return value should not include hash\n     */\n    rgbToHex(rgb, noHash = false) {\n        if (!rgb) {\n            rgb = this.styleEditor.options.defaultColor;\n            if (rgb.indexOf('#') !== 0) {\n                rgb = '#' + rgb;\n            }\n        }\n        if (rgb.indexOf('#') === 0) {\n            if (noHash) {\n                rgb.replace('#', '');\n            }\n            return rgb;\n        }\n        if (rgb.indexOf('(') < 0) {\n            return '#' + rgb;\n        }\n        let rgbArray = rgb.substring(4).replace(')', '').split(',');\n        let withoutHash = this._componentToHex(parseInt(rgbArray[0], 10)) + this._componentToHex(parseInt(rgbArray[1], 10)) +\n            this._componentToHex(parseInt(rgbArray[2], 10));\n        if (noHash) {\n            return withoutHash;\n        }\n        return '#' + withoutHash;\n    }\n    /** get element selected to be styled */\n    getCurrentElement() {\n        if (!this.styleEditor.currentElement) {\n            return null;\n        }\n        if (this.styleEditor.currentElement.target !== undefined) {\n            return this.styleEditor.currentElement.target;\n        }\n        return this.styleEditor.currentElement;\n    }\n    /** set which element is selected to be styled */\n    setCurrentElement(currentElement) {\n        this.styleEditor.currentElement.target = currentElement;\n    }\n    /** does current element have the fill option */\n    fillCurrentElement() {\n        return this.getCurrentElement().options.fill;\n    }\n    /** get current style of current element */\n    getStyle(option) {\n        let currentElement = this.getCurrentElement();\n        let style = currentElement.options[option];\n        if (style) {\n            return style;\n        }\n        return null;\n    }\n    /** set new style to current element */\n    setStyle(option, value) {\n        let currentElement = this.getCurrentElement();\n        if (currentElement instanceof leaflet_1.default.Marker) {\n            this.styleEditor.options.markerType.setStyle(option, value);\n        }\n        else {\n            let newStyle = {};\n            newStyle[option] = value;\n            currentElement.setStyle(newStyle);\n        }\n        this.fireChangeEvent(currentElement);\n    }\n    /** show hidden element */\n    showElement(element) {\n        if (element) {\n            leaflet_1.default.DomUtil.removeClass(element, 'leaflet-styleeditor-hidden');\n        }\n    }\n    /** helper function to convert color to hex */\n    _componentToHex(color) {\n        let hex = color.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    }\n    /** get the markers for a specific color **/\n    getMarkersForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = this.styleEditor.options.markerType.options.markers;\n        let controlMarkers = this.styleEditor.options.markers;\n        if (!Array.isArray(markers)) {\n            // if color is specified return specific markers\n            if (Object.keys(markers).includes(color)) {\n                markers = markers[color];\n            }\n            else {\n                markers = markers['default'];\n            }\n        }\n        if (controlMarkers !== null) {\n            if (!Array.isArray(controlMarkers)) {\n                let keys = Object.keys(controlMarkers);\n                if (keys.includes(color)) {\n                    controlMarkers = controlMarkers[color];\n                }\n                else if (keys.includes('default')) {\n                    controlMarkers = controlMarkers['default'];\n                }\n                else {\n                    controlMarkers = markers;\n                }\n            }\n            return markers.filter((n) => controlMarkers.includes(n));\n        }\n        return markers;\n    }\n    /** get default marker for specific color **/\n    getDefaultMarkerForColor(color) {\n        color = this.rgbToHex(color);\n        let markers = this.getMarkersForColor(color);\n        let defMarkers = [];\n        let defaultMarker = this.styleEditor.options.defaultMarkerIcon;\n        if (defaultMarker !== null) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defaultMarker = this.styleEditor.options.markerType.options.defaultMarkerIcon;\n        if (defaultMarker !== undefined) {\n            if (typeof defaultMarker === 'string') {\n                defMarkers.push(defaultMarker);\n            }\n            if (Object.keys(defaultMarker).includes(color)) {\n                defMarkers.push(defaultMarker[color]);\n            }\n        }\n        defMarkers.filter((n) => markers.includes(n));\n        if (defMarkers.length > 0) {\n            return defMarkers[0];\n        }\n        return markers[0];\n    }\n}\nexports.default = Util;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\nconst form_1 = require(\"../form\");\n/**\n *  FormElement used to style the color\n */\nclass ColorElement extends FormElement_1.default {\n    createContent() {\n        this.options.colorPickerDiv = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-colorpicker', this.options.uiElement);\n        this._getColorRamp().forEach(this._setSelectCallback, this);\n    }\n    /** create of get already created colorRamp */\n    _getColorRamp() {\n        if (!this.options.colorRamp) {\n            // if markers have own colorRamp use it\n            if (this.options.parentForm instanceof form_1.MarkerForm && !!this.styleEditor.options.markerType.options.colorRamp) {\n                this.options.colorRamp = this.styleEditor.options.markerType.options.colorRamp;\n                // else use the default\n            }\n            else {\n                this.options.colorRamp = this.styleEditor.options.colorRamp;\n            }\n        }\n        return this.options.colorRamp;\n    }\n    /** define what to do when color is changed */\n    _setSelectCallback(color) {\n        let elem = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-color', this.options.colorPickerDiv);\n        elem.style.backgroundColor = color;\n        leaflet_1.default.DomEvent.addListener(elem, 'click', this._selectColor, this);\n    }\n    /** set style for chosen color */\n    _selectColor(e) {\n        e.stopPropagation();\n        this.setStyle(this.util.rgbToHex(e.target.style.backgroundColor));\n        // marker styling needs additional function calls\n        if (this.styleEditor.currentElement.target instanceof leaflet_1.default.Marker) {\n            this.styleEditor.options.markerType.setNewMarker();\n        }\n    }\n}\nexports.default = ColorElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement used for styling the dash attribute\n */\nclass DashElement extends FormElement_1.default {\n    /** create the three standard dash options */\n    createContent() {\n        let uiElement = this.options.uiElement;\n        let stroke = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement);\n        stroke.style.backgroundPosition = '0px -75px';\n        leaflet_1.default.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('1');\n        }, this);\n        stroke = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement);\n        stroke.style.backgroundPosition = '0px -95px';\n        leaflet_1.default.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('10, 10');\n        }, this);\n        stroke = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-stroke', uiElement);\n        stroke.style.backgroundPosition = '0px -115px';\n        leaflet_1.default.DomEvent.addListener(stroke, 'click', function () {\n            this.setStyle('15, 10, 1, 10');\n        }, this);\n    }\n}\nexports.default = DashElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement used to style opacity\n */\nclass OpacityFormElement extends FormElement_1.default {\n    /** create number input box */\n    createContent() {\n        this.options.label = leaflet_1.default.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.options.uiElement);\n        let slider = leaflet_1.default.DomUtil.create('input', 'leaflet-styleeditor-input', this.options.uiElement);\n        slider.type = 'range';\n        slider.max = String(1);\n        slider.min = String(0);\n        slider.step = String(0.01);\n        slider.value = String(0.5);\n        // add event listeners\n        leaflet_1.default.DomEvent.addListener(slider, 'change', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(slider, 'input', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(slider, 'keyup', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(slider, 'mouseup', this._setStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.options.slider.value = this.util.getStyle(this.options.styleOption);\n        this.options.label.innerText = 100 * parseInt(this.options.slider.value) + '%';\n    }\n    /** communicate opacity value */\n    _setStyle() {\n        this.setStyle(this.options.slider.value);\n    }\n}\nexports.default = OpacityFormElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement used for adding a description to marker or geometry.\n */\nclass PopupContentElement extends FormElement_1.default {\n    createContent() {\n        let uiElement = this.options.uiElement;\n        let textArea = this.options.descTextAreaField = leaflet_1.default.DomUtil.create('textarea', 'leaflet-styleeditor-input', uiElement);\n        leaflet_1.default.DomEvent.addListener(textArea, 'change', this._setStyle, this);\n    }\n    /** set correct value */\n    style() {\n        let selectedElement = this.util.getCurrentElement();\n        if (selectedElement && selectedElement.options) {\n            this.options.descTextAreaField.value = selectedElement.options.popupContent || '';\n        }\n    }\n    /** communicate popupContent value */\n    _setStyle() {\n        let currentElement = this.util.getCurrentElement();\n        let inputText = this.options.descTextAreaField.value;\n        // check whether a layer is part of a layerGroup\n        let layers = [currentElement];\n        if (currentElement instanceof leaflet_1.default.LayerGroup) {\n            layers = currentElement.getLayers();\n        }\n        // update layer (or all layers of a layerGroup)\n        for (let i = 0; i < layers.length; i++) {\n            let marker = layers[i];\n            if (marker && marker.getPopup && marker.bindPopup) {\n                let popup1 = marker.getPopup();\n                if (popup1) {\n                    popup1.setContent(inputText);\n                }\n                else {\n                    marker.bindPopup(inputText);\n                }\n                /*// tmp store the text content for init next time\n                marker.options = marker.options || {}\n                marker.options.popupContent = inputText\n                TODO*/\n            }\n        }\n        this.setStyle(inputText);\n    }\n}\nexports.default = PopupContentElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement used to style weight\n */\nclass WeigthElement extends FormElement_1.default {\n    /** create number input box */\n    createContent() {\n        this.options.label = leaflet_1.default.DomUtil.create('span', 'leaflet-styleeditor-input-span', this.options.uiElement);\n        let weight = leaflet_1.default.DomUtil.create('input', 'leaflet-styleeditor-input', this.options.uiElement);\n        weight.type = 'range';\n        weight.min = String(0);\n        weight.max = String(20);\n        weight.step = String(1);\n        weight.value = String(4);\n        this.options.weight = weight;\n        // add event listeners\n        leaflet_1.default.DomEvent.addListener(weight, 'change', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(weight, 'input', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(weight, 'keyup', this._setStyle, this);\n        leaflet_1.default.DomEvent.addListener(weight, 'mouseup', this._setStyle, this);\n    }\n    /** set correct value */\n    style() {\n        this.options.weight.value = this.util.getStyle(this.options.styleOption);\n        this.options.label.innerText = this.options.weight.value;\n    }\n    /** communicate weight value */\n    _setStyle() {\n        this.setStyle(this.options.weight.value);\n    }\n}\nexports.default = WeigthElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst form_1 = require(\"./form\");\nrequire('../dist/css/Leaflet.StyleEditor.min.css');\nclass StyleEditor {\n    constructor(options) {\n        this.currentElement = null; // TODO type\n        this._editLayers = [];\n        this._layerGroups = [];\n        this.markerForm = new form_1.MarkerForm(this);\n        this.geometryForm = new form_1.GeometryForm(this);\n        this.options = options;\n    }\n}\nexports.StyleEditor = StyleEditor;\nleaflet_1.default.Marker.include({\n    styleEditor: {\n        type: 'Marker'\n    }\n});\nleaflet_1.default.Polygon.include({\n    styleEditor: {\n        type: 'Polygon'\n    }\n});\nleaflet_1.default.Polyline.include({\n    styleEditor: {\n        type: 'Polyline'\n    }\n});\nleaflet_1.default.Rectangle.include({\n    styleEditor: {\n        type: 'Rectangle'\n    }\n});\nexports.default = leaflet_1.default;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"leaflet\");\nconst Form_1 = __importStar(require(\"./Form\"));\nconst ColorElement_1 = __importDefault(require(\"../formElements/ColorElement\"));\nconst DashElement_1 = __importDefault(require(\"../formElements/DashElement\"));\nconst OpacityElement_1 = __importDefault(require(\"../formElements/OpacityElement\"));\nconst PopupContentElement_1 = __importDefault(require(\"../formElements/PopupContentElement\"));\nconst WeightElement_1 = __importDefault(require(\"../formElements/WeightElement\"));\nclass GeometryFormOptions extends Form_1.FormOptions {\n    constructor(styleEditor) {\n        super();\n        this.formOptionKey = 'geometry';\n        this.formElements = {\n            'color': new ColorElement_1.default(styleEditor),\n            'opacity': new OpacityElement_1.default(styleEditor),\n            'weight': new WeightElement_1.default(styleEditor),\n            'dashArray': new DashElement_1.default(styleEditor),\n            'fillColor': new ColorElement_1.default(styleEditor),\n            'fillOpacity': new OpacityElement_1.default(styleEditor),\n            'popupContent': new PopupContentElement_1.default(styleEditor)\n        };\n    }\n}\n/** Form used to enable modification of a Geometry */\nclass GeometryForm extends Form_1.default {\n    constructor() {\n        super(...arguments);\n        this.options = new GeometryFormOptions(this.styleEditor);\n    }\n    /** show the fillOptions (fillColor and fillOpacity) only if the Element can be filled */\n    showFormElements() {\n        for (let i = 0; i < this.options.initializedElements.length; i++) {\n            if (this.options.initializedElements[i].options.styleOption.indexOf('fill') === 0) {\n                if (this.util.fillCurrentElement()) {\n                    this.showFormElement(this.options.initializedElements[i]);\n                }\n                else {\n                    this.options.initializedElements[i].hide();\n                }\n            }\n            else {\n                this.showFormElement(this.options.initializedElements[i]);\n            }\n        }\n    }\n}\nexports.default = GeometryForm;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst formElements_1 = require(\"../formElements\");\nconst _1 = require(\".\");\n/** Form used to enable modification of a Geometry */\nclass MarkerForm extends _1.Form {\n    constructor() {\n        super(...arguments);\n        this.formOptionKey = 'marker';\n        this.formElements = {\n            'icon': new formElements_1.IconElement(this.styleEditor),\n            'color': new formElements_1.ColorElement(this.styleEditor),\n            'size': new formElements_1.SizeElement(this.styleEditor),\n            'popupContent': new formElements_1.PopupContentElement(this.styleEditor)\n        };\n    }\n}\nexports.default = MarkerForm;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ColorElement_1 = __importDefault(require(\"./ColorElement\"));\nexports.ColorElement = ColorElement_1.default;\nconst DashElement_1 = __importDefault(require(\"./DashElement\"));\nexports.DashElement = DashElement_1.default;\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\nexports.FormElement = FormElement_1.default;\nconst IconElement_1 = __importDefault(require(\"./IconElement\"));\nexports.IconElement = IconElement_1.default;\nconst OpacityElement_1 = __importDefault(require(\"./OpacityElement\"));\nexports.OpacityElement = OpacityElement_1.default;\nconst PopupContentElement_1 = __importDefault(require(\"./PopupContentElement\"));\nexports.PopupContentElement = PopupContentElement_1.default;\nconst SizeElement_1 = __importDefault(require(\"./SizeElement\"));\nexports.SizeElement = SizeElement_1.default;\nconst WeightElement_1 = __importDefault(require(\"./WeightElement\"));\nexports.WeightElement = WeightElement_1.default;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement used for styling the icon\n */\nclass IconElement extends FormElement_1.default {\n    constructor() {\n        super(...arguments);\n        // private classed used in the code\n        this._selectOptionWrapperClasses = 'leaflet-styleeditor-select-option-wrapper leaflet-styleeditor-hidden';\n        this._selectOptionClasses = 'leaflet-styleeditor-select-option';\n    }\n    /** create the icon selectBoxes */\n    createContent() {\n        let uiElement = this.options.uiElement;\n        let selectBox = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-select', uiElement);\n        this.options.selectBoxImage = this._createSelectInputImage(selectBox);\n        leaflet_1.default.DomEvent.addListener(selectBox, 'click', this._toggleSelectInput, this);\n    }\n    /** show the correct icon in the correct color if the icon or color changed */\n    style() {\n        let iconOptions = this.styleEditor.options.markerType.getIconOptions();\n        this._styleSelectInputImage(this.options.selectBoxImage, iconOptions.icon, iconOptions.iconColor);\n        this._createColorSelect(this.styleEditor.options.markerType.options.iconOptions.iconColor);\n        this._hideSelectOptions();\n    }\n    /** if lost focus hide potentially open SelectOption */\n    lostFocus() {\n        this._hideSelectOptions();\n    }\n    /** create image container that hides/shows the iconSelectBox */\n    _createSelectInputImage(parentUiElement) {\n        let wrapper = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-select-image-wrapper', parentUiElement);\n        return leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-select-image', wrapper);\n    }\n    /** create appropriate image for color and icon */\n    _styleSelectInputImage(image, icon, color) {\n        if (!icon) {\n            icon = image.getAttribute('value');\n            if (!icon) {\n                return;\n            }\n        }\n        let iconOptions = this.styleEditor.options.markerType.getIconOptions();\n        if (color) {\n            iconOptions.iconColor = color;\n        }\n        image.innerHTML = '';\n        this.styleEditor.options.markerType.createSelectHTML(image, iconOptions, icon);\n        image.setAttribute('value', icon);\n    }\n    /** create the selectBox with the icons in the correct color */\n    _createColorSelect(color) {\n        if (!this.options.selectOptions) {\n            this.options.selectOptions = {};\n        }\n        if (color in this.options.selectOptions) {\n            return;\n        }\n        let uiElement = this.options.uiElement;\n        let selectOptionWrapper = leaflet_1.default.DomUtil.create('ul', this._selectOptionWrapperClasses, uiElement);\n        this.util.getMarkersForColor(color).forEach(function (option) {\n            let selectOption = leaflet_1.default.DomUtil.create('li', this._selectOptionClasses, selectOptionWrapper);\n            let selectImage = this._createSelectInputImage(selectOption);\n            this._styleSelectInputImage(selectImage, option, color);\n        }, this);\n        this.options.selectOptions[color] = selectOptionWrapper;\n        leaflet_1.default.DomEvent.addListener(selectOptionWrapper, 'click', function (e) {\n            e.stopPropagation();\n            let target = e.target;\n            if (target.nodeName === 'UL') {\n                return;\n            }\n            if (target.parentElement.className === 'leaflet-styleeditor-select-image') {\n                target = target.parentElement;\n            }\n            else {\n                while (target && target.className !== 'leaflet-styleeditor-select-image') {\n                    target = target.children[0];\n                }\n            }\n            this._selectMarker({\n                'target': target\n            }, this);\n        }, this);\n    }\n    /** show/hide iconSelectBox */\n    _toggleSelectInput(e) {\n        let currentColorElement = this._getCurrentColorElement(this.util.rgbToHex(this.styleEditor.options.markerType.options.iconOptions.iconColor));\n        let show = false;\n        if (currentColorElement) {\n            show = leaflet_1.default.DomUtil.hasClass(currentColorElement, 'leaflet-styleeditor-hidden');\n        }\n        this._hideSelectOptions();\n        if (show) {\n            this.util.showElement(currentColorElement);\n        }\n    }\n    /** called when user selects a marker */\n    _selectMarker(e) {\n        let value = this._getValue(e.target);\n        // update style\n        this.options.selectBoxImage.setAttribute('value', value);\n        this.setStyle(value);\n        this._hideSelectOptions();\n    }\n    /** helper function to return attribute value of target */\n    _getValue(target) {\n        return target.getAttribute('value');\n    }\n    /** return correct selectBox depending on which color is currently chosen */\n    _getCurrentColorElement(color) {\n        if (!this.options.selectOptions[color]) {\n            this._createColorSelect(color);\n        }\n        return this.options.selectOptions[color];\n    }\n    /** hide open SelectOption */\n    _hideSelectOptions() {\n        for (let selectOption in this.options.selectOptions) {\n            this.util.hideElement(this.options.selectOptions[selectOption]);\n        }\n    }\n}\nexports.default = IconElement;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst leaflet_1 = __importDefault(require(\"leaflet\"));\nconst FormElement_1 = __importDefault(require(\"./FormElement\"));\n/**\n * FormElement to set style of an icon\n */\nclass SizeElement extends FormElement_1.default {\n    /** create the 3 standard icon sizes */\n    createContent() {\n        let uiElement = this.options.uiElement;\n        let select = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-small', uiElement);\n        leaflet_1.default.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.small);\n        }, this);\n        select = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-medium', uiElement);\n        leaflet_1.default.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.medium);\n        }, this);\n        select = leaflet_1.default.DomUtil.create('div', 'leaflet-styleeditor-sizeicon sizeicon-large', uiElement);\n        leaflet_1.default.DomEvent.addListener(select, 'click', function () {\n            this.setStyle(this.options.styleEditorOptions.markerType.options.size.large);\n        }, this);\n    }\n}\nexports.default = SizeElement;\n"],"sourceRoot":""}